// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WOASS.Models;

namespace WOASS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210418054236_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WOASS.Models.Work", b =>
                {
                    b.Property<int>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GearId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PayStatus")
                        .HasColumnType("bit");

                    b.Property<int>("PriceId")
                        .HasColumnType("int");

                    b.Property<bool>("Priority")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkId");

                    b.ToTable("WorkOrders");

                    b.HasData(
                        new
                        {
                            WorkId = 1,
                            GearId = 1,
                            OrderDate = "10/27/2020",
                            PayStatus = true,
                            PriceId = 1,
                            Priority = false,
                            UserId = 1,
                            WorkType = "wax"
                        },
                        new
                        {
                            WorkId = 2,
                            GearId = 2,
                            OrderDate = "10/28/2020",
                            PayStatus = true,
                            PriceId = 2,
                            Priority = false,
                            UserId = 2,
                            WorkType = "base grind"
                        },
                        new
                        {
                            WorkId = 3,
                            GearId = 3,
                            OrderDate = "10/29/2020",
                            PayStatus = true,
                            PriceId = 2,
                            Priority = false,
                            UserId = 2,
                            WorkType = "base grind"
                        },
                        new
                        {
                            WorkId = 4,
                            GearId = 4,
                            OrderDate = "10/30/2020",
                            PayStatus = true,
                            PriceId = 3,
                            Priority = false,
                            UserId = 3,
                            WorkType = "basic tune"
                        },
                        new
                        {
                            WorkId = 5,
                            GearId = 4,
                            OrderDate = "11/1/2020",
                            PayStatus = true,
                            PriceId = 3,
                            Priority = false,
                            UserId = 3,
                            WorkType = "basic tune"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
